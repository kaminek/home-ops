---
- hosts:
    - k3s-cluster
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
  tasks:
    - name: Locale
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "{{ timezone | default('Etc/UTC') }}"

    - name: Networking
      block:
        - name: Networking | Set hostname to inventory hostname
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}"

        - name: Networking | Update /etc/hosts to include inventory hostname
          ansible.builtin.blockinfile:
            path: /etc/hosts
            block: |
              127.0.1.1   {{ inventory_hostname }}

    - name: Packages
      block:
        - name: Helm repo package
          block:
            - name: helm keyring
              ansible.builtin.apt_key:
                url: https://baltocdn.com/helm/signing.asc

            - name: Set DPKG architecture
              set_fact:
                dpkg_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}"
            - name: helm apt source
              ansible.builtin.apt_repository:
                repo: "deb [arch={{ dpkg_arch }}] https://baltocdn.com/helm/stable/debian/ all main"
                state: present

        - name: Install Packages
          block:
            - name: Distribution Packages | Install required packages
              ansible.builtin.package:
                name: "{{ packages | default([]) }}"
                state: present
                update_cache: true

            - name: pip Packages | Install required packages
              ansible.builtin.pip:
                name: "{{ item }}"
              loop: "{{ pip_packages | default([]) }}"

    - name: System Configuration
      block:
        - name: System Configuration | Enable kernel modules now
          community.general.modprobe:
            name: "{{ item }}"
            state: present
          loop: [br_netfilter, overlay, rbd]

        - name: System Configuration | Enable kernel modules on boot
          ansible.builtin.copy:
            mode: 0644
            content: "{{ item }}"
            dest: "/etc/modules-load.d/{{ item }}.conf"
          loop: [br_netfilter, overlay, rbd]

        - name: System Configuration | Set sysctls
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_file: /etc/sysctl.d/99-kubernetes.conf
            reload: true
          with_dict: "{{ sysctl_config }}"
          vars:
            sysctl_config:
              net.ipv4.ip_forward: 1
              net.ipv4.conf.all.forwarding: 1
              net.ipv4.conf.all.rp_filter: 0
              net.ipv4.conf.default.rp_filter: 0
              net.ipv6.conf.all.forwarding: 1
              net.bridge.bridge-nf-call-iptables: 1
              net.bridge.bridge-nf-call-ip6tables: 1
              fs.inotify.max_user_watches: 524288
              fs.inotify.max_user_instances: 512

        # - name: System Configuration | Permissive SELinux
        #   ansible.posix.selinux:
        #     state: permissive
        #     policy: targeted

        - name: Mount bpffs
          ansible.posix.mount:
            path: /sys/fs/bpf
            src: bpffs
            fstype: bpf
            state: present
      notify: Reboot

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes
