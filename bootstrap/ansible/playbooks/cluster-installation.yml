---
- hosts:
    - homelab
  become: false
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
  tasks:
    - name: Check if cluster is installed
      check_mode: false
      ansible.builtin.stat:
        path: "/etc/rancher/k3s/config.yaml"
      register: k3s_check_installed

    - name: Set manifest facts
      ansible.builtin.set_fact:
        k3s_server_manifests_templates: []
        k3s_server_manifests_urls: []
      when: k3s_check_installed.stat.exists

    - name: Install Kubernetes
      ansible.builtin.include_role:
        name: xanmanning.k3s
        public: true
      vars:
        k3s_state: installed

    - name: Copy kubeconfig to provision folder
      run_once: true
      ansible.builtin.fetch:
        src: "/etc/rancher/k3s/k3s.yaml"
        dest: "/tmp/kubeconfig"
        flat: true
      when:
        - k3s_control_node is defined
        - k3s_control_node

    - name: Update kubeconfig with the correct IPv4 address
      delegate_to: localhost
      connection: local
      become: false
      run_once: true
      ansible.builtin.replace:
        path: "/tmp/kubeconfig"
        regexp: "https://127.0.0.1:6443"
        replace: "https://{{ k3s_cluster_fqdn }}:6443"

    - name: Backup kubeconfig file
      delegate_to: localhost
      connection: local
      become: false
      run_once: true
      ansible.builtin.copy:
        src: ~/.kube/config
        dest: ~/.kube/config.bak

    - name: Merge kubeconfig files
      delegate_to: localhost
      connection: local
      become: false
      run_once: true
      ansible.builtin.shell: KUBECONFIG=~/.kube/config:/tmp/kubeconfig kubectl config view --flatten > ~/.kube/config.merged && mv ~/.kube/config.merged ~/.kube/config && chmod 400 ~/.kube/config

    - name: Wait for custom manifests to rollout
      when:
        - k3s_primary_control_node
        - (k3s_server_manifests_templates | length > 0
            or k3s_server_manifests_urls | length > 0)
      kubernetes.core.k8s_info:
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        kind: "{{ item.kind }}"
        name: "{{ item.name }}"
        namespace: "{{ item.namespace | default('') }}"
        wait: true
        wait_sleep: 10
        wait_timeout: 360
      loop:
        - { name: cilium, kind: HelmChart, namespace: kube-system }
        - { name: coredns, kind: HelmChart, namespace: kube-system }
        - { name: policy, kind: CiliumL2AnnouncementPolicy }
        - { name: pool, kind: CiliumLoadBalancerIPPool }
        - { name: podmonitors.monitoring.coreos.com, kind: CustomResourceDefinition }
        - { name: prometheusrules.monitoring.coreos.com, kind: CustomResourceDefinition }
        - { name: scrapeconfigs.monitoring.coreos.com, kind: CustomResourceDefinition }
        - { name: servicemonitors.monitoring.coreos.com, kind: CustomResourceDefinition }
